library(tidyverse)
library(tidytext)
library(igraph)
library(ggraph)
library(readr)
library(dplyr)

# The count_bigrams function given to us in Ch. 4.
# Note that it does assume the text is in "text" column.
# It does *not* however need tidy text.
count_bigrams <- function(dataset) {
  dataset %>%
    unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
    separate(bigram, c("word1", "word2"), sep = " ") %>%
    filter(!word1 %in% stop_words$word,
           !word2 %in% stop_words$word) %>%
    count(word1, word2, sort = TRUE)
}

# The visualize_bigrams function given in Ch. 4.
# It uses the output of the count_bigrams function above.
# You can adjust top_n number to get more/less bigrams
# but do remember to then rerun the function.
visualize_bigrams <- function(bigrams) {
  set.seed(1234)
  a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
  
  bigrams %>%
    top_n(30) %>%
    graph_from_data_frame() %>%
    ggraph(layout = "fr") +
    geom_edge_link(aes(edge_alpha = n), show.legend = FALSE, arrow = a) +
    geom_node_point(color = "lightblue", size = 5) +
    geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
    theme_void()
}
